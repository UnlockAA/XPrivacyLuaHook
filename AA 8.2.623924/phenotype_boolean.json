{
  "builtin": false,
  "collection": "UnlockAA",
  "group": "ManipulatePhenotype",
  "name": "Phenotype.Boolean",
  "author": "UnlockAA",
  "version": 1,
  "description": "Manipulate Phenotype Boolean",
  "className": "mjm",
  "methodName": "b",
  "parameterTypes": [
    "mjk",
    "java.lang.String",
    "java.lang.Boolean",
    "boolean"
  ],
  "returnType": "mjm",
  "minSdk": 1,
  "maxSdk": 923,
  "minApk": 82623924,
  "maxApk": 82623924,
  "enabled": true,
  "optional": false,
  "usage": true,
  "notify": false,
  "luaScript": "-- Copyright (C) 2022 UnlockAA\n\n-- This is free software: you can redistribute it and/or modify\n-- it under the terms of the GNU General Public License as published by\n-- the Free Software Foundation, either version 3 of the License, or\n-- (at your option) any later version.\n\n-- This is distributed in the hope that it will be useful,\n-- but WITHOUT ANY WARRANTY; without even the implied warranty of\n-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n-- GNU General Public License for more details.\n\n-- You should have received a copy of the GNU General Public License\n-- along with XPrivacyLua. If not, see <http://www.gnu.org/licenses/>.\n\nfunction before(hook, param)\n    local packageName = param:getPackageName()\n\n    if packageName == 'com.google.android.projection.gearhead' then\n        local key = param:getArgument(1)\n        local value = param:getArgument(2)\n        log(key .. ' = ' .. tostring(value))\n        -- enable some options\n        if (key == 'DebugLogging__enabled') or\n           (key == 'UnknownSources__allow_full_screen_apps') or\n           (key == 'Coolwalk__enabled') or\n           (key == 'Coolwalk__fishfood_nag_enabled') or\n           (key == 'Coolwalk__media_rec_card_enabled') or\n           (key == 'Coolwalk__opt_in_default') or\n           (key == 'Coolwalk__rail_dock_enabled') or\n           (key == 'Coolwalk__rail_dock_four_app_enabled') or\n           (key == 'Coolwalk__rail_widget_enabled') or\n           (key == 'Coolwalk__allow_focus_input') or\n           (key == 'Coolwalk__assistant_media_rec_shortcut_enabled') or\n           (key == 'Coolwalk__assistant_suggestions_enabled') or\n           (key == 'Coolwalk__canonical_vertical_rail_default') or\n           (key == 'Coolwalk__canonical_vertical_rail_enabled') or\n           (key == 'Coolwalk__choose_assistant_suggestion_over_app_suggestion') or\n           (key == 'Coolwalk__day_night_theme_enabled') or\n           (key == 'CakewalkGearhead__frx_receiver_enabled') or\n           (key == 'CakewalkFeature__usb_reset_timeout_ms') or\n           (key == 'CakewalkFeature__usb_reset_enabled') or\n           (key == 'CakewalkFeature__phase_1_75_skip_gmm') or\n           (key == 'CakewalkFeature__phase_1_75_skip_agsa') or\n           (key == 'CakewalkFeature__phase_1_75_block_on_unlock_patch_enabled') or\n           (key == 'CakewalkFeature__dont_show_again_enabled') or\n           (key == 'CakewalkFeature__clear_dont_show_again_enabled') or\n           (key == 'CakewalkFeature__use_new_reject_dialog_text') or\n           (key == 'CakewalkFeature__phase_1_75_driving_restriction_removal_enabled') or\n           (key == 'MirrorApp__Enabled') or\n           (key == 'CarProjectionValidator__log_reason_apps_not_allowed_all_apps')\n           then\n            param:setArgument(2, true)\n            return true\n        end\n        -- disable some options\n        if (key == 'TelemetryDriveIdFeature__enabled') or\n           (key == 'CarServiceTelemetry__enabled') or\n           (key == 'CarServiceTelemetry__enabled')\n           then\n            param:setArgument(2, false)\n            return true\n        end\n    end\n    return false\nend\n"
}
